version: '3.3'
services:
  mongo_db:
    image: mongo:${VER_MONGO}
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      back_net:
        aliases:
          - post_db
          - comment_db
  ui:
    image: ${USERNAME}/ui:${VER_UI}
    environment:
      - ENV=DEV
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      resources:
        limits:
          cpus: '0.25'
          memory: 150M
      mode: replicated
      replicas: 3
      update_config:
        delay: 5s
        parallelism: 1
        failure_action: pause
      placement:
        constraints:
          - node.role == worker
    ports:
      - ${PORT_UI_WEB}:${PORT_UI_DOCKER}/tcp
    networks:
      - front_net

  post:
    image: ${USERNAME}/post:${VER_POST}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      resources:
        limits:
          cpus: '0.30'
          memory: 300M
      mode: replicated
      replicas: 3
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net

  comment:
    image: ${USERNAME}/comment:${VER_COMMENT}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 15
        delay: 1s
      resources:
        limits:
          cpus: '0.30'
          memory: 300M
      mode: replicated
      replicas: 3
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net

